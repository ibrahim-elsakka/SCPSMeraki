name: Build Module
on:
  pull_request:
    branches: [ main ]
    
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@main
      - name: List Dirs
        shell: pwsh
        run: pwsh -command "Get-ChildItem ./"
        
      - name: Set required PowerShell modules
        id: psmodulecache
        uses: potatoqualitee/psmodulecache@v1
        with:
          modules-to-cache: Pester, PSScriptAnalyzer, InvokeBuild, platyPS
      
      - name: Setup PowerShell module cache
        id: cacher
        uses: actions/cache@v2
        with:
            path: ${{ steps.psmodulecache.outputs.modulepath }}
            key: ${{ steps.psmodulecache.outputs.keygen }}
      
      - name: Install required PowerShell modules
        if: steps.cacher.outputs.cache-hit != 'true'
        shell: pwsh
        run: |
            Set-PSRepository PSGallery -InstallationPolicy Trusted
            Install-Module ${{ steps.psmodulecache.outputs.needed }} -ErrorAction Stop
            
      - name: Invoke-Build build script
        shell: pwsh
        run: pwsh -command "Invoke-Build -File ./build.ps1 -Configuration 'Release' -ExportAlias -verbose"
        
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v2.2.3
        with:
          # Artifact name
          name: module-artifact
          # A file, directory or wildcard pattern that describes what to upload
          path: ./Output/

  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@main
      - name: List Dirs
        shell: pwsh
        run: pwsh -command "Get-ChildItem ./"
        
      - name: Download artifact
        uses: aochmann/actions-download-artifact@1.0.4
        with:
          # Repository name with owner
          repo: ${{github.repository}}
          # Artifact name (download all artifacts in not specified)
          name: module-artifact
          # Artifact unpack location
          path: ./Output/
          
      - name: Push changes to Git Repository
        run: |
          git config --global user.name 'ScriptingChris'
          git config --global user.email 'christian@scriptingchris.tech'
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}
          git add .
          git commit -am "Pushing Artifacts"
          git push
